{"code":"import { sleep, createProcess } from 'oscore';\r\nimport { expandPosition, isDefined } from '../utils';\r\nexport const spawnManager = createProcess(function* () {\r\n    const getSpawn = () => {\r\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n        return Game.spawns['Spawn1'];\r\n    };\r\n    const spawnHauler = () => {\r\n        getSpawn().spawnCreep([CARRY, CARRY, CARRY, MOVE, MOVE, MOVE], `hauler-${Game.time}`);\r\n    };\r\n    const spawnMiner = (slot) => {\r\n        getSpawn().spawnCreep([WORK, WORK, CARRY, MOVE], `miner-${Game.time}`, {\r\n            memory: { slot },\r\n        });\r\n    };\r\n    const spawnUpgrader = () => {\r\n        getSpawn().spawnCreep([WORK, CARRY, CARRY, MOVE, MOVE], `upgrader-${Game.time}`);\r\n    };\r\n    const spawnWorker = () => {\r\n        getSpawn().spawnCreep([WORK, CARRY, CARRY, MOVE, MOVE], `worker-${Game.time}`);\r\n    };\r\n    const spawnAttacker = () => {\r\n        getSpawn().spawnCreep([MOVE, ATTACK], `attacker-${Game.time}`);\r\n    };\r\n    for (;;) {\r\n        const spawn = getSpawn();\r\n        if (spawn.spawning) {\r\n            yield* sleep(spawn.spawning.remainingTime);\r\n        }\r\n        const sources = spawn.room.find(FIND_SOURCES);\r\n        const terrain = spawn.room.getTerrain();\r\n        const goal = spawn.pos;\r\n        const slots = sources\r\n            .map((source) => expandPosition(source.pos)\r\n            .filter(({ x, y }) => !(terrain.get(x, y) & TERRAIN_MASK_WALL))\r\n            .sort((a, b) => {\r\n            const adistx = Math.abs(goal.x - a.x);\r\n            const bdistx = Math.abs(goal.x - b.x);\r\n            const adisty = Math.abs(goal.y - a.y);\r\n            const bdisty = Math.abs(goal.y - b.y);\r\n            return adistx - bdistx + adisty - bdisty;\r\n        })\r\n            .slice(0, 3))\r\n            .flat();\r\n        const { miner: miners = [], hauler: haulers = [], upgrader: upgraders = [], worker: workers = [], attacker: attackers = [], } = _.groupBy(Object.values(Game.creeps), (c) => c.name.split('-')[0]);\r\n        const enemies = spawn.room.find(FIND_HOSTILE_CREEPS);\r\n        if (attackers.length < enemies.length) {\r\n            spawnAttacker();\r\n        }\r\n        else if (miners.length === 0) {\r\n            const closestSlot = spawn.pos.findClosestByPath(slots);\r\n            if (!closestSlot) {\r\n                // TODO\r\n                // this.logger.error('No source slot', spawn.room);\r\n            }\r\n            else {\r\n                spawnMiner([closestSlot.x, closestSlot.y]);\r\n            }\r\n        }\r\n        else if (haulers.length === 0) {\r\n            spawnHauler();\r\n        }\r\n        else if (miners.length < slots.length) {\r\n            const takenSlots = miners\r\n                .map((creep) => creep.memory.slot)\r\n                .filter(isDefined);\r\n            const freeSlots = slots.filter((pos) => !takenSlots.some(([x, y]) => pos.x === x && pos.y === y));\r\n            const freeSlot = spawn.pos.findClosestByPath(freeSlots);\r\n            if (freeSlot) {\r\n                spawnMiner([freeSlot.x, freeSlot.y]);\r\n            }\r\n        }\r\n        else if (haulers.length < 2) {\r\n            spawnHauler();\r\n        }\r\n        else if (upgraders.length < 4 && spawn.room.controller) {\r\n            spawnUpgrader();\r\n        }\r\n        else if (workers.length < 4) {\r\n            spawnWorker();\r\n        }\r\n        yield* sleep(10);\r\n    }\r\n});\r\n//# sourceMappingURL=spawn-manager.js.map","references":["C:/Users/Neal/AppData/Local/Screeps/scripts/Grunt/screepsOS5/screeps-ai/packages/os/src/index.ts","C:/Users/Neal/AppData/Local/Screeps/scripts/Grunt/screepsOS5/screeps-ai/packages/bot/src/utils/index.ts"],"map":"{\"version\":3,\"file\":\"spawn-manager.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../src/processes/spawn-manager.ts\"],\"names\":[],\"mappings\":\"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\"}"}
