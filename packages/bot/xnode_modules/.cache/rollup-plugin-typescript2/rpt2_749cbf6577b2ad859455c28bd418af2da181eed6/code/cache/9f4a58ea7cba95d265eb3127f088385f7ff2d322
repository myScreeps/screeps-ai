{"code":"import { sleep, createProcess } from 'oscore';\r\nimport { isDefined, restartOnTickChange } from '../utils';\r\nconst runMiners = () => {\r\n    const miners = Object.values(Game.creeps).filter((creep) => creep.my && creep.name.startsWith('miner'));\r\n    for (const miner of miners) {\r\n        if (!isDefined(miner.memory.slot)) {\r\n            miner.suicide();\r\n            continue;\r\n        }\r\n        const [x, y] = miner.memory.slot;\r\n        if (miner.pos.x !== x || miner.pos.y !== y) {\r\n            miner.moveTo(x, y, { visualizePathStyle: { lineStyle: 'dashed' } });\r\n        }\r\n        const [source] = miner.pos.findInRange(FIND_SOURCES, 1);\r\n        if (source === undefined) {\r\n            continue;\r\n        }\r\n        miner.harvest(source);\r\n        if (miner.store.getFreeCapacity()) {\r\n            continue;\r\n        }\r\n        const site = miner.pos.findInRange(FIND_CONSTRUCTION_SITES, 1)[0];\r\n        if (site) {\r\n            miner.build(site);\r\n            continue;\r\n        }\r\n        const container = miner.pos.findClosestByRange(FIND_STRUCTURES, {\r\n            filter: (structure) => structure.structureType === STRUCTURE_CONTAINER,\r\n        });\r\n        if (container && miner.pos.isNearTo(container)) {\r\n            miner.transfer(container, RESOURCE_ENERGY);\r\n        }\r\n    }\r\n};\r\nconst runAttackers = () => {\r\n    const attackers = Object.values(Game.creeps).filter((creep) => creep.my && creep.name.startsWith('attacker'));\r\n    for (const attacker of attackers) {\r\n        const enemy = attacker.pos.findClosestByRange(FIND_HOSTILE_CREEPS);\r\n        if (enemy) {\r\n            attacker.moveTo(enemy, { range: 1 });\r\n            attacker.attack(enemy);\r\n        }\r\n    }\r\n};\r\nconst runWorkers = () => {\r\n    const workers = Object.values(Game.creeps).filter((creep) => creep.my && creep.name.startsWith('worker'));\r\n    for (const worker of workers) {\r\n        const room = worker.room;\r\n        const buildings = room\r\n            .find(FIND_STRUCTURES, {\r\n            filter: (s) => s.hits < s.hitsMax / 2 && s.structureType !== STRUCTURE_WALL,\r\n        })\r\n            .sort((a, b) => a.hits - b.hits);\r\n        const target = buildings.length > 0\r\n            ? buildings[0]\r\n            : worker.pos.findClosestByRange(FIND_MY_CONSTRUCTION_SITES);\r\n        const pickupEnergy = () => {\r\n            const energyDrops = worker.room.find(FIND_DROPPED_RESOURCES, {\r\n                filter: ({ resourceType }) => resourceType === RESOURCE_ENERGY,\r\n            });\r\n            const resource = _.max(energyDrops, 'amount');\r\n            if (!resource) {\r\n                return;\r\n            }\r\n            worker.moveTo(resource);\r\n            worker.pickup(resource);\r\n        };\r\n        if (!target) {\r\n            if (worker.store.getFreeCapacity()) {\r\n                pickupEnergy();\r\n            }\r\n            continue;\r\n        }\r\n        if ((worker.store.getUsedCapacity() && worker.pos.inRangeTo(target, 3)) ||\r\n            !worker.store.getFreeCapacity()) {\r\n            worker.moveTo(target, { range: 3 });\r\n            if (target instanceof ConstructionSite) {\r\n                worker.build(target);\r\n            }\r\n            else {\r\n                worker.repair(target);\r\n            }\r\n        }\r\n        else {\r\n            pickupEnergy();\r\n        }\r\n    }\r\n};\r\nconst runUpgraders = () => {\r\n    const upgraders = Object.values(Game.creeps).filter((creep) => creep.my && creep.name.startsWith('upgrader'));\r\n    for (const upgrader of upgraders) {\r\n        const controller = upgrader.room.controller;\r\n        if (!controller) {\r\n            // TODO\r\n            // this.logger.warn('upgrader in room with no controller', upgrader);\r\n            upgrader.suicide();\r\n            continue;\r\n        }\r\n        if ((upgrader.store.getUsedCapacity() &&\r\n            upgrader.pos.inRangeTo(controller, 3)) ||\r\n            !upgrader.store.getFreeCapacity()) {\r\n            upgrader.moveTo(controller, { range: 3 });\r\n            upgrader.upgradeController(controller);\r\n        }\r\n        else {\r\n            const energyDrops = upgrader.room.find(FIND_DROPPED_RESOURCES, {\r\n                filter: ({ resourceType }) => resourceType === RESOURCE_ENERGY,\r\n            });\r\n            const resource = _.max(energyDrops, 'amount');\r\n            if (!resource) {\r\n                continue;\r\n            }\r\n            upgrader.moveTo(resource);\r\n            upgrader.pickup(resource);\r\n        }\r\n    }\r\n};\r\nconst runHaulers = () => {\r\n    const haulers = Object.values(Game.creeps).filter((creep) => creep.my && creep.name.startsWith('hauler'));\r\n    for (const hauler of haulers) {\r\n        if (hauler.store.getFreeCapacity() < 75) {\r\n            const target = hauler.pos.findClosestByRange(FIND_STRUCTURES, {\r\n                filter: (structure) => (structure.structureType === STRUCTURE_CONTAINER ||\r\n                    structure.structureType === STRUCTURE_SPAWN) &&\r\n                    structure.store.getFreeCapacity(RESOURCE_ENERGY) > 0,\r\n            });\r\n            if (!target) {\r\n                continue;\r\n            }\r\n            hauler.moveTo(target);\r\n            hauler.transfer(target, RESOURCE_ENERGY);\r\n        }\r\n        else {\r\n            const energyDrops = hauler.room.find(FIND_DROPPED_RESOURCES, {\r\n                filter: ({ resourceType }) => resourceType === RESOURCE_ENERGY,\r\n            });\r\n            const resource = _.max(energyDrops, 'amount');\r\n            if (!resource) {\r\n                continue;\r\n            }\r\n            hauler.moveTo(resource);\r\n            hauler.pickup(resource);\r\n        }\r\n    }\r\n};\r\nexport const creepManager = createProcess(restartOnTickChange(function* () {\r\n    for (;;) {\r\n        runAttackers();\r\n        yield;\r\n        runMiners();\r\n        yield;\r\n        runHaulers();\r\n        yield;\r\n        runUpgraders();\r\n        yield;\r\n        runWorkers();\r\n        yield* sleep();\r\n    }\r\n}));\r\n//# sourceMappingURL=creep-manager.js.map","references":["C:/Users/Neal/AppData/Local/Screeps/scripts/Grunt/screepsOS5/screeps-ai/packages/os/src/index.ts","C:/Users/Neal/AppData/Local/Screeps/scripts/Grunt/screepsOS5/screeps-ai/packages/bot/src/utils/index.ts"],"map":"{\"version\":3,\"file\":\"creep-manager.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../src/processes/creep-manager.ts\"],\"names\":[],\"mappings\":\"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\"}"}
