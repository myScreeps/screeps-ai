{"code":"\"use strict\";\r\n/* eslint-disable @typescript-eslint/no-non-null-assertion */\r\n/* eslint-disable @typescript-eslint/restrict-plus-operands */\r\n//const { uniq, truncate } = require('lodash');\r\n//var util = require('Util');\r\n//module.exports = function () {\r\nvar fileName = \"creep Proto \";\r\nvar debugRoomName = \"E27S51\";\r\nvar debugColor = \"Red\";\r\n// task returns true if running, false if completed.\r\nCreep.prototype.runTask = function (task) {\r\n    if (this.memory.runTask == true) {\r\n        //    console.log('<font color = \"yellow\">[' + fileName + 'line:' + util.LineNumber() + '] room[' + this.room.name + '] this.memory.runTask  is ' + this.memory.runTask +' </>');\r\n        var taskStatus = task(this);\r\n        if (taskStatus == true) {\r\n            return true;\r\n        }\r\n        this.memory.runTask = false;\r\n        return false;\r\n    }\r\n};\r\n// Creep.prototype.activeSafeMode = function(){\r\n//     try {\r\n//             // this.say(\"Invaders\");\r\n//             // let invaders = invadedRoom.find(FIND_HOSTILE_CREEPS);\r\n//             // let invaderCount = invaders.length\r\n//             let numberOfInvaders =0;\r\n//             var invaders = this.room.find(FIND_HOSTILE_CREEPS);\r\n//             if (invaders.length > 0) {\r\n//                 numberOfInvaders = invaders.length\r\n//             }\r\n//             //  console.log('<font color = \"yellow\">[' + fileName + 'line:' + util.LineNumber() + '] room[' + this.room.name + '] creep hits is ' + this.hits+ '/' + this.hitsMax + ' </>');\r\n//                 if (numberOfInvaders > 0) {\r\n//                 //    this.say(\"Invader \" + numberOfInvaders);\r\n//                 }\r\n//                 if (this.hits < this.hitsMax) {\r\n//                 if (Memory[this.room.name].savemodeActivationTime == undefined) {\r\n//                         Memory[this.room.name].savemodeActivationTime = Game.time;\r\n//                     }\r\n//                     console.log('<font color = \"Red\">[' + fileName + 'line:' + util.LineNumber() + '] room[' + this.room.name + '] numberOfInvaders  is ' + numberOfInvaders +' </>');\r\n//                     this.room.controller.activateSafeMode();\r\n//                     console.log('<font color = \"red\">[' + fileName + 'line:' + util.LineNumber() + '] room[' + this.room.name + '] WARNING SAFE MODE HAS BEEN ACTIVED </>');\r\n//                 }\r\n//     } catch (error) {\r\n//         console.log('<font color = \"Red\">[' + fileName + 'line:' + util.LineNumber() + '] room[' + this.room.name + '] trapped error  is ' + error +' </>');\r\n//     }\r\n// }\r\nCreep.prototype.doSomethimg = function (someStr) {\r\n    this.say(someStr);\r\n};\r\nCreep.prototype.structureHasStore = function (structureObj) {\r\n    var storeStructure = undefined;\r\n    if (structureObj[\"store\"] == undefined) {\r\n        return false;\r\n    }\r\n    if (structureObj[\"store\"]) {\r\n        return true;\r\n    }\r\n    return false;\r\n};\r\n// Creep.prototype.init = function (){\r\n//     if (this.memory.renewSpawnName == undefined) {\r\n//         this.memory.renewSpawnName = this.room.firstSpawn.name;\r\n//     }\r\n//     if (this.memory.renew == undefined) {\r\n//         this.memory.renew = false\r\n//     }\r\n//     if (this.memory.numberOfWorkParts == undefined) {\r\n//         this.memory.numberOfWorkParts = this.getActiveBodyparts(WORK)\r\n//     }\r\n// }\r\n////////////////////////////////////////////////////////////\r\n// pass object with a store or pass and ObjectId\r\n////////////////////////////////////////////////////////////\r\nCreep.prototype.getEnergyFromStore = function (storeObjectOrId, minEnergyInStore) {\r\n    if (minEnergyInStore == undefined) {\r\n        minEnergyInStore = 50;\r\n    }\r\n    var storeStructure = storeObjectOrId;\r\n    if (this.structureHasStore(storeObjectOrId) == false) {\r\n        // console.log('<font color = \"greem\">[' + fileName + 'line:' + util.LineNumber() + '] room[' + this.room.name + '] storeObjectOrId is ' + storeObjectOrId +'</>');\r\n        storeStructure = Game.getObjectById(storeObjectOrId);\r\n        // if (storeStructure == undefined || this.structureHasStore == false) {\r\n        if (storeStructure == undefined) {\r\n            return undefined;\r\n        }\r\n    }\r\n    //  console.log('<font color = \"greem\">[' + fileName + 'line:' + util.LineNumber() + '] room[' + this.room.name + '] storeStructure is ' + storeStructure +'</>');\r\n    if (storeStructure != undefined && this.structureHasStore(storeStructure) == true) {\r\n        if (storeStructure.store[RESOURCE_ENERGY] >= minEnergyInStore && this.store.energy < this.store.getCapacity()) {\r\n            if (this.pos.isNearTo(storeStructure) == false) {\r\n                var travelStatus = this.moveByPath(storeStructure);\r\n                return travelStatus;\r\n            }\r\n            var withDrawStatus = this.withdraw(storeStructure, RESOURCE_ENERGY);\r\n            return withDrawStatus;\r\n        }\r\n    }\r\n    return undefined;\r\n};\r\nCreep.prototype.debug = function (textColor, fileName, lineNumber, debugText) {\r\n    console.log('<font color = \"' + textColor + '\">[' + fileName + 'line:' + lineNumber + '] ' + debugText + '</>');\r\n};\r\n//${command:workbench.action.files.saveAll}\r\n// function Unit() {\r\n//     this._data; // just temp value\r\n// }\r\n// Unit.prototype = {\r\n//     get accreation() {\r\n//         return this._data;\r\n//     },\r\n//     set accreation(value) {\r\n//         this._data = value\r\n//     },\r\n// }\r\n// Creep.prototype.defineProperty(Creep, 'property1', {\r\n//     value: 42,\r\n//     writable: false\r\n// });\r\n// Creep.prototype.controller = Creep.room.controller;\r\n// Creep.prototype = {\r\n//     get controller() {\r\n//         return this.room.controller;\r\n//     }\r\n// }\r\n// Creep.prototype = {\r\n//     get accreation() {\r\n//         return this._data;\r\n//     },\r\n//     set accreation(value) {\r\n//         this._data = value\r\n//     },\r\n// }\r\n// obj.__defineSetter__(prop, fun)\r\n// Creep.__defineSetter__('value', function (val) {\r\n//     // this.value = \"setter Test\";\r\n//     this.value++;\r\n//     console.log('<font color = \"yellow\">[' + fileName + 'line:' + util.LineNumber() + '] this.value is ' + this.value + '</>');\r\n// });\r\n// Object.defineProperty(Creep, 'valuey', {\r\n//     set: function (val) {\r\n//         this.anotherValue = val + 1;\r\n//         this.valuey = val + 10;\r\n//         console.log('<font color = \"yellow\">[' + fileName + 'line:' + util.LineNumber() + '] this.valuey is ' + this.valuey + '</>');\r\n//     }\r\n// });\r\n// var o = {};\r\n// o.__defineSetter__('value', function (val) {\r\n//     this.anotherValue = 13;\r\n//     this.value = val;\r\n// });\r\nCreep.prototype.storage = function () {\r\n    if (this.room.storage == undefined) {\r\n        return undefined;\r\n    }\r\n    return this.room.storage;\r\n};\r\nCreep.prototype.terminal = function () {\r\n    if (this.room.terminal == undefined) {\r\n        return undefined;\r\n    }\r\n    return this.room.terminal;\r\n};\r\n//   var containerUnderMiner = creep.room.lookAt(creepCurrentPos)[0];\r\nCreep.prototype.getObjectAtCreepPos = function (myStructureType) {\r\n    const look = this.room.lookAt(this.pos);\r\n    let returnValue = undefined;\r\n    look.forEach(function (lookObject) {\r\n        if (lookObject[LOOK_STRUCTURES] == undefined) {\r\n            return;\r\n        }\r\n        //   console.log('<font color = \"green\">[' + fileName + 'line:' + util.LineNumber() + '] lookObject[LOOK_STRUCTURES]  is ' + lookObject[LOOK_STRUCTURES]  +\" structureType:\"+ lookObject[LOOK_STRUCTURES].structureType +'</>');\r\n        //console.log('<font color = \"green\">[' + fileName + 'line:' + util.LineNumber() + '] lookObject[LOOK_STRUCTURES]  is ' + JSON.stringify(lookObject[LOOK_STRUCTURES]) + '</>');\r\n        if (lookObject != undefined && lookObject.type == LOOK_STRUCTURES &&\r\n            lookObject[LOOK_STRUCTURES].structureType == myStructureType) {\r\n            // console.log('<font color = \"yellow\">[' + fileName + 'line:' + util.LineNumber() + '] debug  is ' + lookObject[LOOK_STRUCTURES].structureType  +'</>');\r\n            returnValue = lookObject[LOOK_STRUCTURES];\r\n        }\r\n    });\r\n    return returnValue;\r\n};\r\nCreep.prototype.getObjectAtCreepPos2 = function (myStructureType) {\r\n    const look = this.room.lookAt(this.pos);\r\n    return look.forEach(function (value, index, _look) {\r\n        if (value.structureType === myStructureType) {\r\n            return value;\r\n        }\r\n        // return value;\r\n    });\r\n    //   return;\r\n};\r\nCreep.prototype.findConstructionSite = function (range) {\r\n    const constructionTargets = this.pos.findInRange(FIND_CONSTRUCTION_SITES, range);\r\n    if (constructionTargets.length > 0) {\r\n        return constructionTargets[0];\r\n    }\r\n    else {\r\n        return undefined;\r\n    }\r\n};\r\nCreep.prototype.findNearestConstructionSiteId = function (range) {\r\n    let cs = this.findConstructionSite(range);\r\n    if (cs == undefined) {\r\n        return undefined;\r\n    }\r\n    return cs.id;\r\n};\r\nCreep.prototype.repairNearByStructures = function (range) {\r\n    debugColor = \"yellow\";\r\n    // if (this.room.name == debugRoomName) {\r\n    //     console.log('<font color = '+ debugColor + '>[' + fileName + 'line:' + util.LineNumber() + '] room[' + this.room.name + '] findNearestStructureToRepair </>');\r\n    //  }\r\n    var structures = this.room.lookForAtArea(LOOK_STRUCTURES, this.pos.y - range, this.pos.x - range, this.pos.y + range, this.pos.x + range, true);\r\n    if (structures == undefined) {\r\n        //    console.log('<font color = '+ debugColor + '>[' + fileName + 'line:' + util.LineNumber() + '] room[' + this.room.name + '] no structures found </>');\r\n        return undefined;\r\n    }\r\n    try {\r\n        //   var structures = creep.room.lookForAtArea(LOOK_STRUCTURES, creep.pos.y-1, creep.pos.x-1, creep.pos.y+1, creep.pos.x+1, true);\r\n        // console.log('[' + fileName + 'line:' + util.LineNumber() + '] ' + creep.room.name + ' ' + creep.name + ' structures is ' + structures);\r\n        var workParts = this.getActiveBodyparts(WORK);\r\n        if (workParts == 0) {\r\n            return -1;\r\n        }\r\n        if (structures == undefined || structures == []) {\r\n            return;\r\n        }\r\n        for (let i = 0; i < structures.length; i++) {\r\n            var targetRepairStructure = structures[i].structure;\r\n            if (targetRepairStructure.structureType != STRUCTURE_ROAD\r\n                && targetRepairStructure.structureType != STRUCTURE_CONTAINER\r\n                && targetRepairStructure.structureType != STRUCTURE_SPAWN\r\n                && targetRepairStructure.structureType != STRUCTURE_LINK\r\n                && targetRepairStructure.structureType != STRUCTURE_TERMINAL\r\n                && targetRepairStructure.structureType != STRUCTURE_RAMPART) {\r\n                if (this.room.name == debugRoomName) {\r\n                    //  console.log('<font color = ' + 'yellow ' + '>[' + fileName + 'line:' + util.LineNumber() + '] room[' + this.room.name + '] Skipping targetRepairStructure.structureTyp: ' + targetRepairStructure.structureType + ' </>');\r\n                }\r\n                continue;\r\n                return;\r\n            }\r\n            // console.log (\"^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\");\r\n            // if (this.room.name == debugRoomName) {\r\n            //     console.log('<font color = '+ 'yellow '  + '>[' + fileName + 'line:' + util.LineNumber() + '] room[' + this.room.name + '] targetRepairStructure: ' + targetRepairStructure +' </>');\r\n            //  }\r\n            var hitsMax = targetRepairStructure.hitsMax;\r\n            if (targetRepairStructure.structureType == STRUCTURE_RAMPART) {\r\n                hitsMax = 5000000;\r\n            }\r\n            if (targetRepairStructure.hits < hitsMax) {\r\n                var repairStatus = this.repair(targetRepairStructure);\r\n                if (this.room.name == debugRoomName) {\r\n                    // console.log('<font color = ' + 'green' + '>[' + fileName + 'line:' + util.LineNumber() + '] room[' + this.room.name + ']  Miner is repairing structure: ' + targetRepairStructure + '</>');\r\n                }\r\n                //    if (this.room.name == \"E46S1\") {\r\n                //   console.log('<font color = \"yellow\">[' + fileName + 'line:' + this.LineNumber() + '] repairStatus is ' + repairStatus +'</>');\r\n                // console.log('[' + fileName + 'line:' + this.LineNumber() + '] ' + creep.room.name + ' ' + creep.name + '  repairStatus is ' + repairStatus);\r\n                //    }\r\n                //  break;\r\n                return;\r\n            }\r\n            else {\r\n                if (this.room.name == debugRoomName) {\r\n                    //  console.log('<font color = ' + debugColor + '>[' + fileName + 'line:' + util.LineNumber() + '] room[' + this.room.name + ']  Miner is NOT repairing structure: ' + targetRepairStructure + '</>');\r\n                }\r\n            }\r\n        }\r\n    }\r\n    catch (e) {\r\n        console.log('[' + fileName + 'line:' + this.lineNumber() + '] ' + this.room.name + ' ' + this.name + ' Trapped error while repairing roads is ' + e);\r\n    }\r\n    return undefined;\r\n};\r\nCreep.prototype.findNearestLink = function (range) {\r\n    const links = this.pos.findInRange(FIND_MY_STRUCTURES, range, { filter: { structureType: STRUCTURE_LINK } });\r\n    if (links.length > 0) {\r\n        return links[0];\r\n    }\r\n    else {\r\n        return undefined;\r\n    }\r\n};\r\n// *************************************************************************************\r\n// Could return undefined or null of creep is in a unclaimed room.\r\n// *************************************************************************************\r\nCreep.prototype.findNearestSpawn = function (range) {\r\n    // spawn could be undefined or null of creep is in a unclaimed room.\r\n    // const spawn = this.pos.findClosestByRange(FIND_MY_SPAWNS,range);\r\n    // return spawn;\r\n    const spawns = this.pos.findInRange(FIND_MY_STRUCTURES, range, { filter: { structureType: STRUCTURE_SPAWN } });\r\n    if (spawns.length > 0) {\r\n        return spawns[0];\r\n    }\r\n    else {\r\n        return undefined;\r\n    }\r\n};\r\nCreep.prototype.findNearestSource = function (range) {\r\n    // spawn could be undefined or null of creep is in a unclaimed room.\r\n    // const spawn = this.pos.findClosestByRange(FIND_MY_SPAWNS,range);\r\n    // return spawn;\r\n    if (range == undefined) {\r\n        range = 3;\r\n    }\r\n    const sources = this.pos.findInRange(FIND_SOURCES, range);\r\n    if (sources.length > 0) {\r\n        return sources[0];\r\n    }\r\n    else {\r\n        return undefined;\r\n    }\r\n};\r\nCreep.prototype.pause = function (pauseState, message) {\r\n    if (this.memory.pause != undefined) {\r\n        this.memory.pause = pauseState;\r\n        if (this.memory.pause == true) {\r\n            if (message != undefined) {\r\n                this.say(message);\r\n            }\r\n            else {\r\n                this.say(\"paused\");\r\n            }\r\n        }\r\n        return this.memory.pause;\r\n    }\r\n    return undefined;\r\n};\r\nCreep.prototype.pickupResources = function pickupResources(range) {\r\n    //  util.pickupResources(this, range);\r\n};\r\nCreep.prototype.repairRoad = function repairRoad() {\r\n    //util.repairRoad(this);\r\n};\r\n// Creep.prototype.energy = function energy() {\r\n//   //  return this.store[RESOURCE_ENERGY];\r\n//   return\r\n// }\r\nCreep.prototype.findNearestStructureByType = function (spawnOrCreep, structureType, range) {\r\n    // return util.findNearestStructureByType(spawnOrCreep, structureType, range);\r\n};\r\nCreep.prototype.renewCheck = function (ticksToLive) {\r\n    // do not renew creep if ignoreNew == true\r\n    if (this.memory.ignoreRenew != undefined) {\r\n        if (this.memory.ignoreRenew == true) {\r\n            this.memory.renew = false;\r\n            return false;\r\n        }\r\n    }\r\n    if (this.ticksToLive <= ticksToLive) {\r\n        this.memory.renew = true;\r\n    }\r\n    // else{\r\n    //     this.memory.renew = false;\r\n    // }\r\n    return this.memory.renew;\r\n    // if (this.store.getFreeCapacity(RESOURCE_ENERGY) == 0) {\r\n    //     if (this.ticksToLive <= ticksToLive) {\r\n    //         this.memory.renew = true;\r\n    //     }\r\n    // }\r\n    // if (this.memory.renew == true) {\r\n    //     var closestSpawn = this.pos.findClosestByPath(FIND_MY_SPAWNS);\r\n    //     var isNextToSpawn = this.pos.isNearTo(closestSpawn);\r\n    //     if (!isNextToSpawn) {\r\n    //         var travelToStatus = this.travelTo(closestSpawn);\r\n    //         return this.memory.renew;\r\n    //     }\r\n    //     closestSpawn.renewCreep(this);\r\n    //     if (this.ticksToLive >= 1450) {\r\n    //         this.memory.renew = false;\r\n    //     }\r\n    //     return this.memory.renew;\r\n    //     //var travelToStatus = creep.travelTo(closestSpawn);\r\n    // }\r\n};\r\nCreep.prototype.getRenewed = function (renewAtTick, renewTicks, spawn, forceRenew) {\r\n    if (renewTicks == undefined) {\r\n        renewTicks = 1450;\r\n    }\r\n    if (this.memory.ignoreRenew == true && forceRenew != true) {\r\n        //    console.log('<font color = \"Red\">[' + fileName + 'line:' + util.LineNumber() + ']  Warning: creep has ignoreRenew set to true. Creep: ' + this.name  +' in room '+ this.room.name+' </>');\r\n        return;\r\n    }\r\n    this.renewCheck(renewAtTick);\r\n    // console.log('<font color = \"Red\">[' + fileName + 'line:' + util.LineNumber() + ']   Creep: ' + this.name  +' in room '+ this.room.name+' this.memory.renew: '+ this.memory.renew + '</>');\r\n    if (this.memory.renew == true || forceRenew == true) {\r\n        var closestSpawn = spawn;\r\n        if (closestSpawn == undefined) {\r\n            closestSpawn = this.pos.findClosestByRange(FIND_MY_SPAWNS);\r\n        }\r\n        var isNextToSpawn = this.pos.isNearTo(closestSpawn);\r\n        if (!isNextToSpawn) {\r\n            this.moveTo(closestSpawn);\r\n            return this.memory.renew;\r\n        }\r\n        closestSpawn.renewCreep(this);\r\n        if (this.ticksToLive >= renewTicks) {\r\n            //     console.log('<font color = \"yellow\">[' + fileName + 'line:' + util.LineNumber() + '] room[' + this.room.name + ']  renewTicks is ' + renewTicks +'</>');\r\n            //    console.log('<font color = \"yellow\">[' + fileName + 'line:' + util.LineNumber() + '] room[' + this.room.name + ']  this.ticksToLive  is ' + this.ticksToLive  +'</>');\r\n            //   console.log('<font color = \"yellow\">[' + fileName + 'line:' + util.LineNumber() + '] room[' + this.room.name + ']  this.memory.renew is being set to false </>');\r\n            this.memory.renew = false;\r\n        }\r\n        return this.memory.renew;\r\n        //var travelToStatus = creep.travelTo(closestSpawn);\r\n    }\r\n    return this.memory.renew;\r\n};\r\nCreep.prototype.nearestLinkToController = function (range) {\r\n    this.signController;\r\n};\r\nCreep.prototype.roomPosition = function (x, y) {\r\n    var pos = new RoomPosition(x, y, \"E26N3\");\r\n    return pos;\r\n};\r\n// Creep.prototype.parkIt = function () {\r\n//     if (this.pos.isEqualTo(this.memory.parkItPos) == false) {\r\n//         console.log('<font color = \"yellow\">[' + fileName + 'line:' + util.LineNumber() + '] 1this.memory.parkItPos is ' + this.memory.parkItPos + '</>');\r\n//         console.log('<font color = \"yellow\">[' + fileName + 'line:' + util.LineNumber() + '] this.pos.isEqualTo(this.memory.parkItPos) is ' + this.pos.isEqualTo(this.memory.parkItPos) + '</>');\r\n//         var moveStatus = this.moveTo(this.memory.parkItPos);\r\n//         return false;\r\n//         if (creep.pos.isNearTo(Game.spawns.Spawn2.pos)\r\n//             && creep.store.getFreeCapacity() > 0\r\n//             && Game.spawns.Spawn2.store.getFreeCapacity(RESOURCE_ENERGY) > 0) {\r\n//             creep.transfer(Game.spawns.Spawn2, RESOURCE_ENERGY);\r\n//         } if (creep.pos.isNearTo(Game.spawns.Spawn2.pos)\r\n//             && creep.store.getFreeCapacity() > 0\r\n//             && Game.spawns.Spawn2.store.getFreeCapacity(RESOURCE_ENERGY) > 0) {\r\n//             creep.transfer(Game.spawns.Spawn2, RESOURCE_ENERGY);\r\n//         }\r\n//     }\r\n// }\r\nCreep.prototype.goto = function (pos) {\r\n    if (this.pos.isNearTo(pos) != true) {\r\n        var moveStatus = this.moveTo(pos);\r\n        return false;\r\n    }\r\n    return true;\r\n};\r\n/////////////////////////////////////////////////////////\r\n// must set: creep.memory.gotoFlagName = \"someFlagName\"\r\n// gotoFlag will be removed from creep memory\r\nCreep.prototype.gotoFlag = function () {\r\n    if (this.memory.gotoFlag) {\r\n        let gotoFlag = Game.flags[this.memory.gotoFlag];\r\n        if (this.pos.isEqualTo(gotoFlag) == false) {\r\n            this.moveTo(gotoFlag);\r\n            return;\r\n        }\r\n        //////////////////////////////////\r\n        // remove flag name from memory\r\n        if (this.pos.isEqualTo(gotoFlag) == true) {\r\n            this.memory.gotoFlag = undefined;\r\n        }\r\n    }\r\n};\r\nCreep.prototype.travelNearTo = function (pos) {\r\n    if (this.pos.isNearTo(pos) == false) {\r\n        this.moveTo(pos);\r\n        if (this.pos.isNearTo(pos) == true) {\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n    return;\r\n};\r\nCreep.prototype.myTravelTo = function (pos, options) {\r\n    if (this.pos.isNearTo(pos) != true) {\r\n        var moveStatus = this.moveTo(pos, options);\r\n        //  console.log('<font color = \"yellow\">[' + fileName + 'line:' + util.LineNumber() + '] room[' + this.room.name + '] moveStatus is ' + moveStatus + '</>');\r\n        // console.log('<font color = \"yellow\">[' + fileName + 'line:' + util.LineNumber() + '] room[' + this.room.name + '] moving To location: ' + pos + '</>');\r\n        return moveStatus;\r\n    }\r\n    return 0;\r\n};\r\nCreep.prototype.gotoXY = function (x, y) {\r\n    var pos = new RoomPosition(x, y, this.room.name);\r\n    if (this.pos.isEqualTo(pos) != true) {\r\n        var moveStatus = this.moveTo(pos);\r\n        return false;\r\n    }\r\n    return true;\r\n};\r\nCreep.prototype.forceMove = function (reservedlocation, moveDirection) {\r\n    var moveStatus;\r\n    if (this.pos.isEqualTo(reservedlocation)) {\r\n        if (this.store[RESOURCE_ENERGY] != 0) {\r\n            moveStatus = this.move(moveDirection);\r\n            if (moveStatus != 0) {\r\n                moveStatus = this.move(moveDirection++);\r\n                if (moveStatus != 0) {\r\n                    moveStatus = this.move(moveDirection++);\r\n                    if (moveStatus != 0) {\r\n                        moveStatus = this.move(moveDirection++);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            this.move(BOTTOM);\r\n        }\r\n    }\r\n    return moveStatus;\r\n};\r\nCreep.prototype.getConstructionSiteInRange = function (range) {\r\n    if (range == undefined) {\r\n        range = 3;\r\n    }\r\n    var constructionSitesInRange = this.pos.findInRange(FIND_CONSTRUCTION_SITES, range);\r\n    if (constructionSitesInRange != undefined) {\r\n        if (constructionSitesInRange.length > 0) {\r\n            return constructionSitesInRange[0];\r\n        }\r\n        return undefined;\r\n    }\r\n    return;\r\n};\r\nCreep.prototype.transferEnergyToStorage = function () {\r\n    if (this.room.storage != undefined) {\r\n        if (this.store.getUsedCapacity() > 0) {\r\n            if (this.room.storage.store.getFreeCapacity(RESOURCE_ENERGY) > 0) {\r\n                // creep.say (\"toTerm\");\r\n                let transferStatus = this.transfer(this.room.storage, RESOURCE_ENERGY);\r\n                return transferStatus;\r\n            }\r\n        }\r\n    }\r\n    return;\r\n};\r\nCreep.prototype.transferEnergyToTerminal = function () {\r\n    if (this.room.terminal != undefined) {\r\n        if (this.store.getUsedCapacity() > 0) {\r\n            if (this.room.terminal.store.getFreeCapacity(RESOURCE_ENERGY) > 0) {\r\n                // creep.say (\"toTerm\");\r\n                let transferStatus = this.transfer(this.room.terminal, RESOURCE_ENERGY);\r\n                return transferStatus;\r\n            }\r\n        }\r\n        ``;\r\n    }\r\n    return;\r\n};\r\nCreep.prototype.getContainerUnderCreep = function () {\r\n    // check if it has been cached\r\n    if (this.memory.containerUnderCreepId != undefined) {\r\n        return Game.getObjectById(this.memory.containerUnderCreepId);\r\n    }\r\n    let containerUnderCreep = this.room.getContainerAtPos(this.pos);\r\n    if (containerUnderCreep == undefined) {\r\n        return undefined;\r\n    }\r\n    this.memory.containerUnderCreepId = containerUnderCreep.id;\r\n    return;\r\n};\r\nCreep.prototype.getContainerUnderMiner = function (creep) {\r\n    return this.getContainerUnderCreep();\r\n    // let source = Game.getObjectById(creep.memory.sourceId);\r\n    // //    console.log('<font color = \"yellow\">[' + fileName + 'line:' + util.LineNumber() + '] room[' + creep.room.name + '] source is ' + source + '</>');\r\n    // //     // find container next to source\r\n    // let container\r\n    // try {\r\n    //     container = source.pos.findInRange(FIND_STRUCTURES, 1, {\r\n    //         filter: s => s.structureType == STRUCTURE_CONTAINER\r\n    //         //  && s.store[RESOURCE_ENERGY] < 2000\r\n    //     })[0];\r\n    // }\r\n    // catch (e) {\r\n    //     console.log('<font color = \"yellow\">[' + fileName + 'line:' + util.LineNumber() + '] room[' + creep.room.name + '] ........................e is ' + e + '</>');\r\n    //     container = undefined;\r\n    // }\r\n    //        console.log('<font color = \"yellow\">[' + fileName + 'line:' + util.LineNumber() + '] room[' + creep.room.name + '] container.pos is ' + container.pos + '</>');\r\n    //      console.log('<font color = \"yellow\">[' + fileName + 'line:' + util.LineNumber() + '] room[' + creep.room.name + '] creep.pos is ' + creep.pos + '</>');\r\n    // if (container != undefined && creep.pos.isEqualTo(container)) {\r\n    //     return container;\r\n    // }\r\n    // else {\r\n    //     return undefined\r\n    // }\r\n};\r\nCreep.prototype.stack = function () {\r\n    let e = new Error();\r\n    return e.stack;\r\n};\r\nCreep.prototype.getBuildTarget = function () {\r\n    // only look for buildTarget if creep is in target room\r\n    if (this.room.name != this.memory.targetRoomName) {\r\n        return undefined;\r\n    }\r\n    var constructionSite = this.pos.findClosestByRange(FIND_CONSTRUCTION_SITES, {\r\n        filter: s => s.progress < s.progressTotal\r\n        //  && s.room.name == creep.room.name\r\n    });\r\n    return constructionSite;\r\n};\r\nCreep.prototype.getNearestEmptyExtension = function () {\r\n    // only look for extention if creep is in target room\r\n    if (this.room.name != this.memory.targetRoomName) {\r\n        return undefined;\r\n    }\r\n    var ext = this.pos.findClosestByRange(FIND_STRUCTURES, {\r\n        filter: s => s.structureType === STRUCTURE_EXTENSION\r\n            && s.store.getFreeCapacity(RESOURCE_ENERGY) > 0\r\n    });\r\n    //creep.say(\"extcheck\");\r\n    //   console.log('<font color = \"yellow\">[' + fileName + 'line:' + util.LineNumber() + '] room[' + this.room.name + '] ext is ' + ext + '</>');\r\n    return ext;\r\n};\r\nCreep.prototype.retreat = function (retreatFlagName) {\r\n    let retreatLocation = undefined;\r\n    let invaderUsername = undefined;\r\n    if (retreatFlagName == undefined) {\r\n        if (this.memory.retreatFlagName == undefined) {\r\n            return null;\r\n        }\r\n    }\r\n    else if (this.memory.retreatFlagName != undefined && retreatFlagName == undefined) {\r\n        retreatFlagName = this.memory.retreatFlagName;\r\n    }\r\n    else if (retreatFlagName) {\r\n        this.memory.retreatFlagName = retreatFlagName;\r\n    }\r\n    if (this.memory.retreatFlagName != undefined) {\r\n        retreatLocation = Game.flags[this.memory.retreatFlagName];\r\n        //   this.say (retreatFlagName.name);\r\n        //  this.say (\"Retreat!\");\r\n        //  return;\r\n    }\r\n    else {\r\n        this.say(\"No Retreat\");\r\n        return;\r\n    }\r\n    //let invadedRoom = this.room;\r\n    let invadedRoom = this.targetRoom();\r\n    if (invadedRoom == undefined) {\r\n        let invadedRoom = this.room;\r\n    }\r\n    let invaders = invadedRoom.find(FIND_HOSTILE_CREEPS);\r\n    let invaderCount = invaders.length;\r\n    if (invaderCount > 0 && this.room.controller.safeMode == undefined) {\r\n        invaderUsername = invaders[0].owner.username;\r\n        if (invaderCount > 1) {\r\n            this.moveTo(retreatLocation);\r\n            this.say(invaderUsername + \"s\");\r\n            return true;\r\n        }\r\n        if (invaderCount = 1) {\r\n            //     var spawn7 = Game.spawns[\"Spawn7\"]\r\n            //     var spawn9 = Game.spawns[\"Spawn9\"]\r\n            //console.log('<font color = \"red\">[' + fileName + 'line:' + util.LineNumber() + '] room[' + this.room.name + '] invaderUsername is ' + invaderUsername + '</>');\r\n            if (invaderUsername != \"csW\") {\r\n                this.moveTo(retreatLocation);\r\n                this.say(invaderUsername);\r\n                return true;\r\n            }\r\n            this.say(invaderUsername);\r\n            return false;\r\n        }\r\n    }\r\n    return false;\r\n};\r\nCreep.prototype.getNearestRoadTarget = function () {\r\n    // only look for road Target if creep is in target room\r\n    if (this.room.name != this.memory.targetRoomName) {\r\n        return undefined;\r\n    }\r\n    var road = this.pos.findClosestByRange(FIND_STRUCTURES, {\r\n        filter: s => s.structureType === STRUCTURE_ROAD\r\n            && s.hits < s.hitsMax\r\n        //  && s.room.name == creep.room.name\r\n    });\r\n    var targetflagName = \"Road_Repair_\" + this.room.name;\r\n    if (Game.flags.Road_Repair) {\r\n        this.room.createFlag(road.pos, targetflagName, COLOR_RED);\r\n    }\r\n    if (road != null) {\r\n        Game.flags[targetflagName].setPosition(road.pos);\r\n    }\r\n    return road;\r\n};\r\nCreep.prototype.findContainersInRange = function (range) {\r\n    let containers = this.pos.findInRange(FIND_STRUCTURES, 5, { filter: s => s.structureType === STRUCTURE_CONTAINER\r\n            && s.store[RESOURCE_ENERGY] > 50 });\r\n    return containers;\r\n};\r\nCreep.prototype.findContainerInRange = function (range) {\r\n    let containers = this.findContainersInRange(range);\r\n    let container = undefined;\r\n    if (containers.length > 0) {\r\n        container = containers[0];\r\n    }\r\n    return container;\r\n};\r\nCreep.prototype.lineNumber = function () {\r\n    let e = new Error();\r\n    let result = e.stack.split(\"\\n\")[3].split(\":\");\r\n    result.pop();\r\n    return result.pop();\r\n};\r\n// Returns targetRoom or sets target room\r\nCreep.prototype.myTargetRoom = function (targetRoomName) {\r\n    if (targetRoomName == undefined) {\r\n        if (this.memory.targetRoomName == undefined) {\r\n            return undefined;\r\n        }\r\n    }\r\n    else {\r\n        this.memory.targetRoomName = targetRoomName;\r\n    }\r\n    let targetRoom = Game.rooms[this.memory.targetRoomName];\r\n    // this.targetRoom = targetRoom\r\n    return targetRoom;\r\n};\r\n// Returns targetRoom or sets target room\r\nCreep.prototype.targetRoom = function (targetRoomName) {\r\n    if (targetRoomName == undefined) {\r\n        if (this.memory.targetRoomName == undefined) {\r\n            return undefined;\r\n        }\r\n        if (this.memory.targetRoomName != undefined) {\r\n            return Game.rooms[this.memory.targetRoomName];\r\n        }\r\n    }\r\n    else {\r\n        this.memory.targetRoomName = targetRoomName;\r\n    }\r\n    let targetRoom = Game.rooms[this.memory.targetRoomName];\r\n    return targetRoom;\r\n};\r\nCreep.prototype.retreat = function (retreatFlagName) {\r\n    let retreatLocation = undefined;\r\n    let invaderUsername = undefined;\r\n    if (retreatFlagName == undefined) {\r\n        if (this.memory.retreatFlagName == undefined) {\r\n            return null;\r\n        }\r\n    }\r\n    else {\r\n        this.memory.retreatFlagName = retreatFlagName;\r\n    }\r\n    if (this.memory.retreatFlagName != undefined) {\r\n        retreatLocation = Game.flags[this.memory.retreatFlagName];\r\n        //   this.say (retreatFlagName.name);\r\n        //  this.say (\"Retreat!\");\r\n        //  return;\r\n    }\r\n    else {\r\n        this.say(\"No Retreat\");\r\n        return;\r\n    }\r\n    //let invadedRoom = this.room;\r\n    let invadedRoom = this.targetRoom();\r\n    if (invadedRoom == undefined) {\r\n        let invadedRoom = this.room;\r\n    }\r\n    let invaders = invadedRoom.find(FIND_HOSTILE_CREEPS);\r\n    let invaderCount = invaders.length;\r\n    if (invaderCount > 0) {\r\n        invaderUsername = invaders[0].owner.username;\r\n        if (invaderCount > 1) {\r\n            this.moveTo(retreatLocation);\r\n            this.say(invaderUsername + \"s\");\r\n            return true;\r\n        }\r\n        if (invaderCount = 1) {\r\n            //     var spawn7 = Game.spawns[\"Spawn7\"]\r\n            //     var spawn9 = Game.spawns[\"Spawn9\"]\r\n            //console.log('<font color = \"red\">[' + fileName + 'line:' + util.LineNumber() + '] room[' + this.room.name + '] invaderUsername is ' + invaderUsername + '</>');\r\n            if (invaderUsername != \"csW\") {\r\n                this.moveTo(retreatLocation);\r\n                this.say(invaderUsername);\r\n                return true;\r\n            }\r\n            this.say(invaderUsername);\r\n            return false;\r\n        }\r\n    }\r\n    return false;\r\n};\r\nCreep.prototype.myRetreat = function (retreatFlagName) {\r\n    let target = this.myTargetRoom(\"E26S52\");\r\n    return this.retreat(\"Retreat_E25S52\");\r\n};\r\nObject.defineProperty(Creep.prototype, \"color\", {\r\n    set: function (val) {\r\n        this._color = val.toUpperCase();\r\n        return this._color;\r\n    },\r\n    get: function () {\r\n        return this._color;\r\n    },\r\n    enumerable: true,\r\n    configurable: true\r\n});\r\nObject.defineProperty(Creep.prototype, \"terminal\", {\r\n    get: function () {\r\n        if (this.room.terminal != undefined) {\r\n            return this.room.terminal;\r\n        }\r\n        return undefined;\r\n    },\r\n    enumerable: true,\r\n    configurable: true\r\n});\r\nObject.defineProperty(Creep.prototype, \"storage\", {\r\n    get: function () {\r\n        if (this.room.terminal != undefined) {\r\n            return this.room.storage;\r\n        }\r\n        return undefined;\r\n    },\r\n    enumerable: true,\r\n    configurable: true\r\n});\r\nObject.defineProperty(Creep.prototype, \"renew\", {\r\n    set: function (val) {\r\n        this.memory.renew = val;\r\n        return this.memory.renew;\r\n    },\r\n    get: function () {\r\n        return this.memory.renew;\r\n    },\r\n    enumerable: false,\r\n    configurable: true\r\n});\r\nObject.defineProperty(Creep.prototype, \"ignoreRenew\", {\r\n    set: function (val) {\r\n        this.memory.ignoreRenew = val;\r\n        return this.memory.ignoreRenew;\r\n    },\r\n    get: function () {\r\n        return this.memory.ignoreRenew;\r\n    },\r\n    enumerable: true,\r\n    configurable: true\r\n});\r\nObject.defineProperty(Creep.prototype, \"sourceId\", {\r\n    set: function (val) {\r\n        this.memory.sourceId = val;\r\n        return this.memory.sourceId;\r\n    },\r\n    get: function () {\r\n        if (this.memory.sourceId != undefined) {\r\n            return this.memory.sourceId;\r\n        }\r\n        else {\r\n            return undefined;\r\n        }\r\n    },\r\n    enumerable: true,\r\n    configurable: true\r\n});\r\nObject.defineProperty(Creep.prototype, \"primaryEnergySourceId\", {\r\n    set: function (val) {\r\n        this.memory.primaryEnergySourceId = val;\r\n        return this.memory.primaryEnergySourceId;\r\n    },\r\n    get: function () {\r\n        if (this.memory.primaryEnergySourceId != undefined) {\r\n            return this.memory.primaryEnergySourceId;\r\n        }\r\n        else {\r\n            return undefined;\r\n        }\r\n    },\r\n    enumerable: false,\r\n    configurable: true\r\n});\r\nObject.defineProperty(Creep.prototype, \"nearestContainer\", {\r\n    // set: function (val) {\r\n    //     this.memory.primaryEnergySourceId = val;\r\n    //     return this.memory.primaryEnergySourceId;\r\n    // },\r\n    get: function () {\r\n        var ClosestContainer = this.pos.findClosestByPath(FIND_STRUCTURES, {\r\n            filter: (s) => s.structureType == STRUCTURE_CONTAINER\r\n        });\r\n        // console.log('<font color = \"yellow\">[' + fileName + 'line:' + util.LineNumber() + '] 11ClosestContainer is ' + ClosestContainer + '</>');\r\n        if (ClosestContainer != undefined) {\r\n            return ClosestContainer;\r\n        }\r\n        else {\r\n            return undefined;\r\n        }\r\n    },\r\n    enumerable: true,\r\n    configurable: true\r\n});\r\nObject.defineProperty(Creep.prototype, \"isFull\", {\r\n    // set: function (val) {\r\n    //     this.memory.primaryEnergySourceId = val;\r\n    //     return this.memory.primaryEnergySourceId;\r\n    // },\r\n    get: function () {\r\n        // var capacity = this.store.getCapacity()\r\n        var free = this.store.getFreeCapacity();\r\n        if (free == 0) {\r\n            return true;\r\n        }\r\n        return false;\r\n    },\r\n    enumerable: false,\r\n    configurable: true\r\n});\r\nObject.defineProperty(Creep.prototype, \"isEmpty\", {\r\n    // set: function (val) {\r\n    //     this.memory.primaryEnergySourceId = val;\r\n    //     return this.memory.primaryEnergySourceId;\r\n    // },\r\n    get: function () {\r\n        var capacity = this.store.getCapacity();\r\n        var free = this.store.getFreeCapacity();\r\n        if (capacity == free) {\r\n            return true;\r\n        }\r\n        return false;\r\n    },\r\n    enumerable: false,\r\n    configurable: true\r\n});\r\n///////////////////////////////////////////////////////////////\r\n// not finished. Does not work\r\n///////////////////////////////////////////////////////////////\r\n// Object.defineProperty(Creep.prototype, \"nearestSource\", {\r\n//     set: function (val) {\r\n//         this.memory.primaryEnergySourceId = val;\r\n//         return this.memory.primaryEnergySourceId;\r\n//     },\r\n//     get: function () {\r\n//         var ClosestContainer = creep.pos.findClosestByPath(FIND_SOURCE, {\r\n//             filter: s => s.structureType == STRUCTURE_CONTAINER\r\n//         });\r\n//        console.log('<font color = \"yellow\">[' + fileName + 'line:' + util.LineNumber() + '] 11ClosestContainer is ' + ClosestContainer + '</>');\r\n//         if (ClosestContainer != undefined) {\r\n//             return ClosestContainer;\r\n//         }\r\n//         else {\r\n//             return undefined;\r\n//         }\r\n//     },\r\n//     enumerable: true,\r\n//     configurable: true\r\n// });\r\n// Creep.prototype.findNearestSource(){\r\n// }\r\n//}\r\n//# sourceMappingURL=prototype.creep.js.map","references":[],"map":"{\"version\":3,\"file\":\"prototype.creep.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../src/processes/prototype.creep.ts\"],\"names\":[],\"mappings\":\"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\"}"}
