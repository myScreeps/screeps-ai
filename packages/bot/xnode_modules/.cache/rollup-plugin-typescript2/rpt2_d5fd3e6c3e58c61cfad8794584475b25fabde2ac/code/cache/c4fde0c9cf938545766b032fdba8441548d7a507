{"code":"// Adapted from https://github.com/screepers/screeps-snippets/blob/8b557a3fcb82cb734fca155b07d5a48622f9da60/src/misc/JavaScript/Memory%20Cache.js\r\nexport const wrapWithMemoryHack = (fn) => {\r\n    const memory = Memory;\r\n    return () => {\r\n        delete global.Memory;\r\n        global.Memory = memory;\r\n        fn();\r\n        // there are two ways of saving Memory with different advantages and disadvantages\r\n        // 1. RawMemory.set(JSON.stringify(Memory));\r\n        // + ability to use custom serialization method\r\n        // - you have to pay for serialization\r\n        // - unable to edit Memory via Memory watcher or console\r\n        // 2. RawMemory._parsed = Memory;\r\n        // - undocumented functionality, could get removed at any time\r\n        // + the server will take care of serialization, it doesn't cost any CPU on your site\r\n        // + maintain full functionality including Memory watcher and console\r\n        // this implementation uses the official way of saving Memory\r\n        RawMemory.set(JSON.stringify(Memory));\r\n    };\r\n};\r\n//# sourceMappingURL=memory-hack.js.map","references":[],"map":"{\"version\":3,\"file\":\"memory-hack.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/utils/memory-hack.ts\"],\"names\":[],\"mappings\":\"AAEA,iJAAiJ;AACjJ,MAAM,CAAC,MAAM,kBAAkB,GAAG,CAAC,EAAc,EAAE,EAAE;IACnD,MAAM,MAAM,GAAG,MAAM,CAAC;IAEtB,OAAO,GAAG,EAAE;QACV,OAAO,MAAM,CAAC,MAAM,CAAC;QACrB,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC;QAEvB,EAAE,EAAE,CAAC;QAEL,kFAAkF;QAClF,4CAA4C;QAC5C,+CAA+C;QAC/C,sCAAsC;QACtC,wDAAwD;QACxD,iCAAiC;QACjC,8DAA8D;QAC9D,qFAAqF;QACrF,qEAAqE;QAErE,6DAA6D;QAC7D,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC;IACxC,CAAC,CAAC;AACJ,CAAC,CAAC\"}"}
