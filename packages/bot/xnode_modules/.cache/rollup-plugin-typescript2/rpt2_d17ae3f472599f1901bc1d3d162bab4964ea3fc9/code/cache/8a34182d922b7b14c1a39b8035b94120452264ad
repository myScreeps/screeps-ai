{"code":"import { sleep, createProcess } from 'oscore';\r\nimport { expandPosition } from '../utils';\r\nexport const roomPlanner = createProcess(function* (roomName) {\r\n    var _a, _b, _c;\r\n    const costMatrix = new PathFinder.CostMatrix();\r\n    const room = () => {\r\n        // TODO\r\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n        return Game.rooms[roomName];\r\n    };\r\n    // TODO\r\n    const center = (_b = (_a = room().find(FIND_MY_SPAWNS)[0]) === null || _a === void 0 ? void 0 : _a.pos) !== null && _b !== void 0 ? _b : new RoomPosition(25, 25, roomName);\r\n    const search = (target, range, costMatrix) => {\r\n        return PathFinder.search(center, { pos: target, range }, {\r\n            swampCost: 10,\r\n            plainCost: 2,\r\n            roomCallback: () => costMatrix,\r\n        });\r\n    };\r\n    const runPathsPlan = function* (nodes) {\r\n        const costMatrix = new PathFinder.CostMatrix();\r\n        const finalPaths = [];\r\n        for (const node of nodes) {\r\n            if (!node.pos) {\r\n                continue;\r\n            }\r\n            const res = search(node.pos, node.range, costMatrix);\r\n            const flatPaths = finalPaths.flat();\r\n            const path = res.path.filter(({ x, y }) => !flatPaths.some((p) => p.x === x && p.y === y));\r\n            finalPaths.push(path);\r\n            path.forEach(({ x, y }) => costMatrix.set(x, y, 1));\r\n            yield;\r\n        }\r\n        return finalPaths;\r\n    };\r\n    const findSourceContainers = (sources, paths) => {\r\n        const terrain = room().getTerrain();\r\n        return sources.map((target) => {\r\n            const endPoint = target.findClosestByRange(paths.flat());\r\n            if (!endPoint) {\r\n                return null;\r\n            }\r\n            const spots = expandPosition(target).filter((pos) => terrain.get(pos.x, pos.y) ^ TERRAIN_MASK_WALL);\r\n            return endPoint.findClosestByRange(spots);\r\n        });\r\n    };\r\n    const getControllerContainer = (paths) => {\r\n        var _a;\r\n        const target = (_a = room().controller) === null || _a === void 0 ? void 0 : _a.pos;\r\n        if (!target) {\r\n            return null;\r\n        }\r\n        const endPoint = target.findClosestByRange(paths.flat());\r\n        if (!endPoint) {\r\n            return null;\r\n        }\r\n        const spots = expandPosition(endPoint);\r\n        return target.findClosestByRange(spots.filter((spot) => spot.getRangeTo(target) >= 3));\r\n    };\r\n    const drawRoomVisuals = (paths, containers) => {\r\n        for (const { x, y } of paths.flat()) {\r\n            room().visual.structure(x, y, STRUCTURE_ROAD, { opacity: 0.3 });\r\n        }\r\n        room().visual.connectRoads({ opacity: 0.5 });\r\n        for (const { x, y } of containers) {\r\n            room().visual.structure(x, y, STRUCTURE_CONTAINER, { opacity: 0.5 });\r\n        }\r\n    };\r\n    const sources = room()\r\n        .find(FIND_SOURCES)\r\n        .sort((a, b) => search(a.pos, 1, costMatrix).cost - search(b.pos, 1, costMatrix).cost)\r\n        .map((s) => ({ pos: s.pos, range: 2 }));\r\n    const nodeRoom = room();\r\n    const nodes = sources.concat(nodeRoom.controller ? { pos: (_c = nodeRoom.controller) === null || _c === void 0 ? void 0 : _c.pos, range: 3 } : []);\r\n    const paths = yield* runPathsPlan(nodes);\r\n    const containers = findSourceContainers(sources.map(({ pos }) => pos), paths)\r\n        .concat(getControllerContainer(paths))\r\n        .filter((v) => !!v);\r\n    yield;\r\n    for (;;) {\r\n        yield* sleep();\r\n        drawRoomVisuals(paths, containers);\r\n        const containerSites = containers.filter((pos) => room().lookForAt(LOOK_STRUCTURES, pos).length === 0);\r\n        if (containerSites.length > 0) {\r\n            containerSites.forEach((site) => room().createConstructionSite(site.x, site.y, STRUCTURE_CONTAINER));\r\n            continue;\r\n        }\r\n        if (room().find(FIND_CONSTRUCTION_SITES).length > 0) {\r\n            continue;\r\n        }\r\n        const path = containers.find((pos) => room().lookForAt(LOOK_STRUCTURES, pos).length === 0);\r\n        if (path) {\r\n            room().createConstructionSite(path.x, path.y, STRUCTURE_ROAD);\r\n            continue;\r\n        }\r\n    }\r\n});\r\n//# sourceMappingURL=room-planner.js.map","references":["C:/Users/Neal/AppData/Local/Screeps/scripts/Grunt/screepsOS5/screeps-ai/packages/os/src/index.ts","C:/Users/Neal/AppData/Local/Screeps/scripts/Grunt/screepsOS5/screeps-ai/packages/bot/src/utils/index.ts"],"map":"{\"version\":3,\"file\":\"room-planner.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../src/processes/room-planner.ts\"],\"names\":[],\"mappings\":\"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\"}"}
