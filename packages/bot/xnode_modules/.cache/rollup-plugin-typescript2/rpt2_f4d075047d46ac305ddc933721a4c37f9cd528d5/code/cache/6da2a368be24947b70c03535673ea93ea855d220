{"code":"import { sleep, createProcess } from 'oscore';\r\nimport { restartOnTickChange } from '../utils';\r\nimport { createLogger, } from '../library';\r\n// const getRoom = (roomName: string): Room => {\r\n//     const room = Game.rooms[roomName];\r\n//     if (room === undefined) {\r\n//       return exit(`Room ${roomName} not found`);\r\n//     }\r\n//     return room;\r\n//   };\r\nconst logger = createLogger('room-manager');\r\nconst findContainerWithEnergy = (worker) => {\r\n    let container;\r\n    let containers = worker.pos.findInRange(FIND_STRUCTURES, 5, {\r\n        filter: s => (s.structureType == STRUCTURE_CONTAINER && s.store[RESOURCE_ENERGY] > 0)\r\n    });\r\n    if (containers.length > 0) {\r\n        container = containers[0];\r\n        return container;\r\n    }\r\n    return undefined;\r\n};\r\nconst rooms = Game.rooms;\r\nexport const roomManager = createProcess(restartOnTickChange(function* () {\r\n    var _a;\r\n    for (;;) {\r\n        for (let roomName in rooms) {\r\n            let room = Game.rooms[roomName];\r\n            let controllerLevel = (_a = room === null || room === void 0 ? void 0 : room.controller) === null || _a === void 0 ? void 0 : _a.level;\r\n            if ((room === null || room === void 0 ? void 0 : room.name) == \"E44S3\") {\r\n                const Source2_Container_E44S3 = Game.flags.Source2_Container_E44S3;\r\n                const source2Container1 = Game.getObjectById(\"62f2e4a57349b1bc0ab9956a\");\r\n                const source2Container2 = Game.getObjectById(\"62fc7ce8da37d44cdfcde5ee\");\r\n                if (source2Container1.store.getUsedCapacity(RESOURCE_ENERGY) >= source2Container2.store.getUsedCapacity(RESOURCE_ENERGY)) {\r\n                    Source2_Container_E44S3 === null || Source2_Container_E44S3 === void 0 ? void 0 : Source2_Container_E44S3.setPosition(source2Container1);\r\n                }\r\n                else {\r\n                    Source2_Container_E44S3 === null || Source2_Container_E44S3 === void 0 ? void 0 : Source2_Container_E44S3.setPosition(source2Container2);\r\n                }\r\n            }\r\n            if (room != undefined) {\r\n                //   const spawns = room.find(FIND_MY_SPAWNS);\r\n                let towers = _.filter(Game.structures, s => s.structureType == STRUCTURE_TOWER && s.room.name == room.name);\r\n                let invaders = room.find(FIND_HOSTILE_CREEPS);\r\n                let damagedCreeps = room.find(FIND_MY_CREEPS, { filter: s => s.hits < s.hitsMax });\r\n                let repairStructures = room.find(FIND_STRUCTURES, { filter: s => s.hits < s.hitsMax\r\n                        && s.structureType == STRUCTURE_ROAD\r\n                        || s.structureType == STRUCTURE_CONTAINER });\r\n                // Priority 1: attack invaders\r\n                if (invaders.length > 0) {\r\n                    let invader = invaders[0];\r\n                    for (const tower of towers) {\r\n                        tower.attack(invader);\r\n                        console.log(\"**** Invader in room ****\");\r\n                    }\r\n                    yield* sleep();\r\n                }\r\n                // Priority 2: heal creeps\r\n                if (invaders.length == 0 && damagedCreeps.length > 0) {\r\n                    for (const tower of towers) {\r\n                        var damagedCreep = tower.pos.findClosestByRange(FIND_MY_CREEPS, { filter: s => s.hits < s.hitsMax });\r\n                        if (damagedCreep != undefined) {\r\n                            tower.heal(damagedCreep);\r\n                        }\r\n                        //   console.log(\"**** Invader in room ****\")\r\n                    }\r\n                    yield* sleep();\r\n                }\r\n                // Priority 3: repair structures\r\n                if (invaders.length == 0 && repairStructures.length > 0) {\r\n                    for (const tower of towers) {\r\n                        if (tower.store.getUsedCapacity(RESOURCE_ENERGY) <= 400) {\r\n                            continue;\r\n                        }\r\n                        var damagedStucture = tower.pos.findClosestByRange(FIND_STRUCTURES, { filter: s => s.hits < s.hitsMax\r\n                                && (s.structureType == STRUCTURE_ROAD\r\n                                    || s.structureType == STRUCTURE_CONTAINER) });\r\n                        // check for ramparts\r\n                        if (damagedStucture == undefined) {\r\n                            damagedStucture = tower.pos.findClosestByRange(FIND_STRUCTURES, { filter: s => s.hits < 100000\r\n                                    && (s.structureType == STRUCTURE_RAMPART) });\r\n                        }\r\n                        if (damagedStucture != undefined) {\r\n                            tower.repair(damagedStucture);\r\n                        }\r\n                        //   console.log(\"**** Invader in room ****\")\r\n                    }\r\n                    yield* sleep();\r\n                }\r\n                console.log(room.name);\r\n            }\r\n            // if (controllerLevel == 4) {\r\n            //     if (room!.storage == undefined) {\r\n            //         if (Game.flags[\"Storage_\" + room!.name] != undefined) {\r\n            //         }\r\n            //     }\r\n            // }\r\n        }\r\n        yield* sleep(); // required. Do not remove\r\n    }\r\n}));\r\n//# sourceMappingURL=room-manager.js.map","references":["C:/Users/Neal/AppData/Local/Screeps/scripts/Grunt/screepsOS5/screeps-ai/packages/os/src/index.ts","C:/Users/Neal/AppData/Local/Screeps/scripts/Grunt/screepsOS5/screeps-ai/packages/bot/src/utils/index.ts","C:/Users/Neal/AppData/Local/Screeps/scripts/Grunt/screepsOS5/screeps-ai/packages/bot/src/library/index.ts","C:/Users/Neal/AppData/Local/Yarn/Berry/cache/@types-lodash-npm-3.10.2-77e50b98cf-9.zip/node_modules/@types/lodash/index.d.ts"],"map":"{\"version\":3,\"file\":\"room-manager.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../src/processes/room-manager.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,EAAE,KAAK,EAAE,aAAa,EAAE,MAAM,QAAQ,CAAC;AAC9C,OAAO,EAAa,mBAAmB,EAAE,MAAM,UAAU,CAAC;AAC1D,OAAO,EAKL,YAAY,GAGb,MAAM,YAAY,CAAC;AAGpB,gDAAgD;AAChD,yCAAyC;AAEzC,gCAAgC;AAChC,mDAAmD;AACnD,QAAQ;AAER,mBAAmB;AACnB,OAAO;AAGL,MAAM,MAAM,GAAG,YAAY,CAAC,cAAc,CAAC,CAAC;AAI9C,MAAM,uBAAuB,GAAG,CAAC,MAAY,EAAE,EAAE;IAC/C,IAAI,SAAc,CAAA;IAClB,IAAK,UAAU,GAAG,MAAM,CAAC,GAAG,CAAC,WAAW,CAAC,eAAe,EAAE,CAAC,EAAE;QACzD,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,aAAa,IAAI,mBAAmB,IAAI,CAAC,CAAC,KAAK,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC;KACxF,CAAC,CAAC;IAEH,IAAI,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE;QACzB,SAAS,GAAG,UAAU,CAAC,CAAC,CAAC,CAAA;QACzB,OAAO,SAAS,CAAC;KAClB;IAED,OAAO,SAAS,CAAC;AAEnB,CAAC,CAAA;AAED,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;AAEzB,MAAM,CAAC,MAAM,WAAW,GAAG,aAAa,CACtC,mBAAmB,CAAC,QAAQ,CAAC;;IAC3B,SAAS;QACL,KAAK,IAAI,QAAQ,IAAI,KAAK,EAC1B;YACI,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;YAChC,IAAI,eAAe,GAAG,MAAA,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,UAAU,0CAAE,KAAK,CAAC;YAE9C,IAAI,CAAA,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,IAAI,KAAI,OAAO,EAAE;gBACvB,MAAM,uBAAuB,GAAG,IAAI,CAAC,KAAK,CAAC,uBAAuB,CAAC;gBACnE,MAAM,iBAAiB,GAAG,IAAI,CAAC,aAAa,CAAE,0BAAiC,CAAQ,CAAC;gBACxF,MAAM,iBAAiB,GAAG,IAAI,CAAC,aAAa,CAAE,0BAAiC,CAAQ,CAAC;gBACxF,IAAI,iBAAiB,CAAC,KAAK,CAAC,eAAe,CAAC,eAAe,CAAC,IAAI,iBAAiB,CAAC,KAAK,CAAC,eAAe,CAAC,eAAe,CAAC,EAAE;oBACvH,uBAAuB,aAAvB,uBAAuB,uBAAvB,uBAAuB,CAAE,WAAW,CAAC,iBAAiB,CAAC,CAAC;iBAC1D;qBACG;oBACA,uBAAuB,aAAvB,uBAAuB,uBAAvB,uBAAuB,CAAE,WAAW,CAAC,iBAAiB,CAAC,CAAC;iBAC3D;aACJ;YAGD,IAAI,IAAI,IAAI,SAAS,EAAE;gBACtB,8CAA8C;gBAC3C,IAAI,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,aAAa,IAAI,eAAe,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI,IAAK,IAAK,CAAC,IAAI,CAAqB,CAAE;gBACnI,IAAI,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,mBAAmB,CAAe,CAAA;gBAC3D,IAAI,aAAa,GAAG,IAAI,CAAC,IAAI,CAAE,cAAc,EAAE,EAAE,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,OAAO,EAAC,CAAC,CAAC;gBACnF,IAAI,gBAAgB,GAAG,IAAI,CAAC,IAAI,CAAE,eAAe,EAAE,EAAE,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,OAAO;2BAC5E,CAAC,CAAC,aAAa,IAAI,cAAc;2BACjC,CAAC,CAAC,aAAa,IAAI,mBAAmB,EAAC,CAAC,CAAC;gBAEjD,8BAA8B;gBAC9B,IAAI,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE;oBACrB,IAAI,OAAO,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;oBAC1B,KAAK,MAAM,KAAK,IAAI,MAAM,EAAE;wBACxB,KAAK,CAAC,MAAM,CAAC,OAAQ,CAAC,CAAC;wBACvB,OAAO,CAAC,GAAG,CAAC,2BAA2B,CAAC,CAAA;qBAC3C;oBACD,KAAK,CAAC,CAAC,KAAK,EAAE,CAAC;iBAClB;gBAED,0BAA0B;gBAC1B,IAAI,QAAQ,CAAC,MAAM,IAAI,CAAC,IAAI,aAAa,CAAC,MAAM,GAAG,CAAC,EAAE;oBAClD,KAAK,MAAM,KAAK,IAAI,MAAM,EAAE;wBAGxB,IAAI,YAAY,GAAG,KAAK,CAAC,GAAG,CAAC,kBAAkB,CAAC,cAAc,EAAE,EAAE,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,OAAO,EAAC,CAAC,CAAC;wBAChG,IAAI,YAAY,IAAI,SAAS,EAAE;4BAC3B,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;yBAC5B;wBAER,6CAA6C;qBAC7C;oBACD,KAAK,CAAC,CAAC,KAAK,EAAE,CAAC;iBAClB;gBAED,gCAAgC;gBAChC,IAAI,QAAQ,CAAC,MAAM,IAAI,CAAC,IAAI,gBAAgB,CAAC,MAAM,GAAG,CAAC,EAAE;oBACrD,KAAK,MAAM,KAAK,IAAI,MAAM,EAAE;wBAExB,IAAI,KAAK,CAAC,KAAK,CAAC,eAAe,CAAC,eAAe,CAAC,IAAG,GAAG,EAAG;4BACrD,SAAS;yBACZ;wBAEG,IAAI,eAAe,GAAG,KAAK,CAAC,GAAG,CAAC,kBAAkB,CAAE,eAAe,EAAE,EAAE,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,OAAO;mCACnG,CAAC,CAAC,CAAC,aAAa,IAAI,cAAc;uCAClC,CAAC,CAAC,aAAa,IAAI,mBAAmB,CACxC,EAAC,CAAC,CAAC;wBAEJ,qBAAqB;wBACrB,IAAI,eAAe,IAAI,SAAS,EAAE;4BAC9B,eAAe,GAAG,KAAK,CAAC,GAAG,CAAC,kBAAkB,CAAE,eAAe,EAAE,EAAE,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,GAAG,MAAM;uCACxF,CAAC,CAAC,CAAC,aAAa,IAAI,iBAAiB,CAAC,EAAC,CAAC,CAAC;yBACnD;wBAED,IAAI,eAAe,IAAI,SAAS,EAAE;4BAC9B,KAAK,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC;yBACjC;wBAER,6CAA6C;qBAC7C;oBACD,KAAK,CAAC,CAAC,KAAK,EAAE,CAAC;iBAClB;gBAED,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;aACzB;YAED,8BAA8B;YAC9B,wCAAwC;YACxC,kEAAkE;YAElE,YAAY;YACZ,QAAQ;YACR,IAAI;SAGP;QAEA,KAAK,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,0BAA0B;KAG9C;AACH,CAAC,CAAC,CACH,CAAC\"}"}
