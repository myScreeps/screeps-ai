{"code":"// require('./prototype.spawn')();\r\n//require('prototype.creep')();\r\n//require('prototype.room')();\r\nimport './polyfills';\r\nimport { Kernel, PriorityScheduler } from 'oscore';\r\nimport { ErrorMapper } from './utils/ErrorMapper';\r\nimport { getMemoryRef, LogLevel, recordGlobals, resetStats, createLogger, setLogFilter, setLogLevel, } from './library';\r\nimport { registry } from './registry';\r\nimport { wrapWithMemoryHack } from './utils/memory-hack';\r\nconst kernelLogger = createLogger('kernel');\r\nconst kernel = new Kernel({\r\n    registry,\r\n    scheduler: new PriorityScheduler(0),\r\n    getDataHandle: (key, value) => getMemoryRef(`kernel:${key}`, value),\r\n    quota: () => Game.cpu.tickLimit * 1.8 - Game.cpu.getUsed(),\r\n    clock: () => Game.time,\r\n    logger: {\r\n        onKernelError(message) {\r\n            kernelLogger.alert(message);\r\n        },\r\n        onThreadExit({ type, pid }, reason) {\r\n            kernelLogger.info(`${type}:${pid} exited: ${reason}`);\r\n        },\r\n        onThreadError({ type, pid }, error) {\r\n            kernelLogger.error(`${type}:${pid} errored:`, error);\r\n        },\r\n    },\r\n});\r\n// @ts-ignore: to use ps in console\r\nglobal.ps = (root = 0) => {\r\n    const processes = kernel.ps();\r\n    const processMap = new Map(processes.map((info) => [info.pid, info]));\r\n    const processesByParent = _.groupBy(processes.filter(({ pid }) => pid !== 0), 'parent');\r\n    const getSubTree = (prefix, pid, end) => {\r\n        var _a;\r\n        const entry = processMap.get(pid);\r\n        if (!entry) {\r\n            return `${prefix}${pid}:${end ? '`-- ' : '|-- '}MISSING`;\r\n        }\r\n        const { type, args } = entry;\r\n        const argSuffix = args.length > 0\r\n            ? `:${args.map((arg) => JSON.stringify(arg)).join(',')}`\r\n            : '';\r\n        const header = `${prefix}${end ? '`-- ' : '|-- '}${pid}:${type}${argSuffix}`;\r\n        const children = (_a = processesByParent[pid]) !== null && _a !== void 0 ? _a : [];\r\n        children.sort((a, b) => a.pid - b.pid);\r\n        const childTree = children.map(({ pid }, i) => getSubTree(prefix + (end ? '    ' : '|    '), pid, i === children.length - 1));\r\n        return `${header}\\n${childTree.join('')}`;\r\n    };\r\n    return getSubTree('', root, true);\r\n};\r\n// @ts-ignore: to use reboot in console\r\nglobal.reboot = () => {\r\n    return kernel.reboot();\r\n};\r\n// @ts-ignore: to use kill in console\r\nglobal.kill = (pid) => {\r\n    return kernel.kill(pid);\r\n};\r\n// @ts-ignore: to use setLogLevel in console\r\nglobal.LogLevel = LogLevel;\r\n// @ts-ignore: to use setLogLevel in console\r\nglobal.setLogLevel = setLogLevel;\r\n// @ts-ignore: to use setLogFilter in console\r\nglobal.setLogFilter = setLogFilter;\r\nexport const loop = ErrorMapper.wrapLoop(wrapWithMemoryHack(() => {\r\n    resetStats();\r\n    kernel.run();\r\n    const tower = Game.getObjectById(\"62f446749fb8831de0634625\");\r\n    // console.log (JSON.stringify(tower));\r\n    // Automatically delete memory of missing creeps\r\n    for (const name in Memory.creeps) {\r\n        if (!(name in Game.creeps)) {\r\n            delete Memory.creeps[name];\r\n        }\r\n    }\r\n    recordGlobals();\r\n}));\r\n//# sourceMappingURL=main.js.map","references":["C:/Users/Neal/AppData/Local/Screeps/scripts/Grunt/screepsOS5/screeps-ai/packages/bot/src/polyfills/index.ts","C:/Users/Neal/AppData/Local/Screeps/scripts/Grunt/screepsOS5/screeps-ai/packages/os/src/index.ts","C:/Users/Neal/AppData/Local/Screeps/scripts/Grunt/screepsOS5/screeps-ai/packages/bot/src/utils/ErrorMapper.ts","C:/Users/Neal/AppData/Local/Screeps/scripts/Grunt/screepsOS5/screeps-ai/packages/bot/src/library/index.ts","C:/Users/Neal/AppData/Local/Screeps/scripts/Grunt/screepsOS5/screeps-ai/packages/bot/src/registry.ts","C:/Users/Neal/AppData/Local/Screeps/scripts/Grunt/screepsOS5/screeps-ai/packages/bot/src/utils/memory-hack.ts"],"map":"{\"version\":3,\"file\":\"main.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../src/main.ts\"],\"names\":[],\"mappings\":\"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\"}"}
