{"code":"import { getMemoryRef } from './memory';\r\nconst statsRef = getMemoryRef('stats', {});\r\nexport const resetStats = () => {\r\n    statsRef.set({\r\n        time: Game.time,\r\n    });\r\n};\r\nexport const recordStats = (stats) => {\r\n    statsRef.set(_.merge(statsRef.get(), stats, (a, b) => typeof a === 'number' && typeof b === 'number' ? a + b : undefined));\r\n};\r\nexport const recordGlobals = () => {\r\n    var _a, _b;\r\n    const rooms = _.mapValues(_.pick(Game.rooms, (room) => { var _a; return (_a = room.controller) === null || _a === void 0 ? void 0 : _a.my; }), (room) => {\r\n        var _a, _b, _c;\r\n        return ({\r\n            energyAvailable: room.energyAvailable,\r\n            energyCapacityAvailable: room.energyCapacityAvailable,\r\n            controllerProgress: (_a = room.controller) === null || _a === void 0 ? void 0 : _a.progress,\r\n            controllerProgressTotal: (_b = room.controller) === null || _b === void 0 ? void 0 : _b.progressTotal,\r\n            controllerLevel: (_c = room.controller) === null || _c === void 0 ? void 0 : _c.level,\r\n        });\r\n    });\r\n    const heap = (_b = (_a = Game.cpu).getHeapStatistics) === null || _b === void 0 ? void 0 : _b.call(_a);\r\n    recordStats({\r\n        rooms,\r\n        gcl: {\r\n            progress: Game.gcl.progress,\r\n            progressTotal: Game.gcl.progressTotal,\r\n            level: Game.gcl.level,\r\n        },\r\n        cpu: {\r\n            bucket: Game.cpu.bucket,\r\n            limit: Game.cpu.limit,\r\n            used: Game.cpu.getUsed(),\r\n        },\r\n        heap: {\r\n            used: heap === null || heap === void 0 ? void 0 : heap.used_heap_size,\r\n            limit: heap === null || heap === void 0 ? void 0 : heap.total_available_size,\r\n        },\r\n        memory: {\r\n            used: RawMemory.get().length,\r\n        },\r\n    });\r\n};\r\n//# sourceMappingURL=stats.js.map","references":["C:/Users/Neal/AppData/Local/Screeps/scripts/Grunt/screepsOS5/screeps-ai/packages/bot/src/library/memory.ts"],"map":"{\"version\":3,\"file\":\"stats.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../src/library/stats.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,EAAE,YAAY,EAAE,MAAM,UAAU,CAAC;AAMxC,MAAM,QAAQ,GAAG,YAAY,CAAc,OAAO,EAAE,EAAE,CAAC,CAAC;AAExD,MAAM,CAAC,MAAM,UAAU,GAAG,GAAG,EAAE;IAC7B,QAAQ,CAAC,GAAG,CAAC;QACX,IAAI,EAAE,IAAI,CAAC,IAAI;KAChB,CAAC,CAAC;AACL,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,WAAW,GAAG,CAAC,KAAkB,EAAE,EAAE;IAChD,QAAQ,CAAC,GAAG,CACV,CAAC,CAAC,KAAK,CACL,QAAQ,CAAC,GAAG,EAAE,EACd,KAAK,EACL,CAAC,CAAuB,EAAE,CAAuB,EAAE,EAAE,CACnD,OAAO,CAAC,KAAK,QAAQ,IAAI,OAAO,CAAC,KAAK,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,SAAS,CACrE,CACF,CAAC;AACJ,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,aAAa,GAAG,GAAG,EAAE;;IAChC,MAAM,KAAK,GAAG,CAAC,CAAC,SAAS,CACvB,CAAC,CAAC,IAAI,CACJ,IAAI,CAAC,KAAK,EACV,CAAC,IAAU,EAAE,EAAE,WAAC,OAAA,MAAA,IAAI,CAAC,UAAU,0CAAE,EAAE,CAAA,EAAA,CACpC,EACD,CAAC,IAAI,EAAE,EAAE;;QAAC,OAAA,CAAC;YACT,eAAe,EAAE,IAAI,CAAC,eAAe;YACrC,uBAAuB,EAAE,IAAI,CAAC,uBAAuB;YACrD,kBAAkB,EAAE,MAAA,IAAI,CAAC,UAAU,0CAAE,QAAQ;YAC7C,uBAAuB,EAAE,MAAA,IAAI,CAAC,UAAU,0CAAE,aAAa;YACvD,eAAe,EAAE,MAAA,IAAI,CAAC,UAAU,0CAAE,KAAK;SACxC,CAAC,CAAA;KAAA,CACH,CAAC;IACF,MAAM,IAAI,GAAG,MAAA,MAAA,IAAI,CAAC,GAAG,EAAC,iBAAiB,kDAAI,CAAC;IAE5C,WAAW,CAAC;QACV,KAAK;QACL,GAAG,EAAE;YACH,QAAQ,EAAE,IAAI,CAAC,GAAG,CAAC,QAAQ;YAC3B,aAAa,EAAE,IAAI,CAAC,GAAG,CAAC,aAAa;YACrC,KAAK,EAAE,IAAI,CAAC,GAAG,CAAC,KAAK;SACtB;QACD,GAAG,EAAE;YACH,MAAM,EAAE,IAAI,CAAC,GAAG,CAAC,MAAM;YACvB,KAAK,EAAE,IAAI,CAAC,GAAG,CAAC,KAAK;YACrB,IAAI,EAAE,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE;SACzB;QACD,IAAI,EAAE;YACJ,IAAI,EAAE,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,cAAc;YAC1B,KAAK,EAAE,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,oBAAoB;SAClC;QACD,MAAM,EAAE;YACN,IAAI,EAAE,SAAS,CAAC,GAAG,EAAE,CAAC,MAAM;SAC7B;KACF,CAAC,CAAC;AACL,CAAC,CAAC\"}"}
