{"code":"export class OSExit extends Error {\r\n}\r\nexport const createProcess = (process) => function* (...args) {\r\n    // yield;\r\n    yield* process(...args);\r\n};\r\nfunction assertResultType(res, type) {\r\n    var _a;\r\n    // istanbul ignore next\r\n    if (!res || res.type !== type) {\r\n        throw new Error(`Expected to receive a ${type} result, but got ${(_a = res === null || res === void 0 ? void 0 : res.type) !== null && _a !== void 0 ? _a : 'unknown'}`);\r\n    }\r\n}\r\nexport function* sleep(ticks = 1) {\r\n    yield {\r\n        type: 'sleep',\r\n        ticks,\r\n    };\r\n}\r\nexport function* hibernate() {\r\n    for (;;) {\r\n        yield* sleep(Infinity);\r\n    }\r\n}\r\nexport function* fork(type, priority, ...args) {\r\n    const res = yield {\r\n        type: 'fork',\r\n        processType: type,\r\n        args,\r\n        priority,\r\n    };\r\n    assertResultType(res, 'fork');\r\n    return res.pid;\r\n}\r\nexport function* kill(pid) {\r\n    yield {\r\n        type: 'kill',\r\n        pid,\r\n    };\r\n}\r\nexport const exit = (reason) => {\r\n    throw new OSExit(reason);\r\n};\r\nexport function* allocate(address, defaultValue) {\r\n    const res = yield {\r\n        type: 'allocate',\r\n    };\r\n    assertResultType(res, 'allocate');\r\n    if (!(address in res.pointer)) {\r\n        res.pointer[address] = defaultValue;\r\n    }\r\n    return {\r\n        get value() {\r\n            return res.pointer[address];\r\n        },\r\n        set value(v) {\r\n            res.pointer[address] = v;\r\n        },\r\n    };\r\n}\r\nexport function* getChildren() {\r\n    const res = yield {\r\n        type: 'children',\r\n    };\r\n    assertResultType(res, 'children');\r\n    return res.children;\r\n}\r\nexport function* requestPriority(priority) {\r\n    yield {\r\n        type: 'request_priority',\r\n        priority,\r\n    };\r\n}\r\n//# sourceMappingURL=system.js.map","references":["C:/Users/Neal/AppData/Local/Screeps/scripts/Grunt/screepsOS5/screeps-ai/packages/os/src/Scheduler.ts"],"map":"{\"version\":3,\"file\":\"system.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../os/src/system.ts\"],\"names\":[],\"mappings\":\"AAEA,MAAM,OAAO,MAAO,SAAQ,KAAK;CAAG;AA8DpC,MAAM,CAAC,MAAM,aAAa,GAAG,CAC3B,OAAwC,EACzB,EAAE,CACjB,QAAQ,CAAC,EAAE,GAAG,IAAI;IAChB,SAAS;IACT,KAAK,CAAC,CAAC,OAAO,CAAC,GAAG,IAAI,CAAC,CAAC;AAC1B,CAAkB,CAAC;AAErB,SAAS,gBAAgB,CACvB,GAAmB,EACnB,IAAO;;IAEP,uBAAuB;IACvB,IAAI,CAAC,GAAG,IAAI,GAAG,CAAC,IAAI,KAAK,IAAI,EAAE;QAC7B,MAAM,IAAI,KAAK,CACb,yBAAyB,IAAI,oBAAoB,MAAA,GAAG,aAAH,GAAG,uBAAH,GAAG,CAAE,IAAI,mCAAI,SAAS,EAAE,CAC1E,CAAC;KACH;AACH,CAAC;AAMD,MAAM,SAAS,CAAC,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC;IAC9B,MAAM;QACJ,IAAI,EAAE,OAAO;QACb,KAAK;KACN,CAAC;AACJ,CAAC;AAED,MAAM,SAAS,CAAC,CAAC,SAAS;IACxB,SAAS;QACP,KAAK,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;KACxB;AACH,CAAC;AAYD,MAAM,SAAS,CAAC,CAAC,IAAI,CACnB,IAAU,EACV,QAAmB,EACnB,GAAG,IAAsC;IAEzC,MAAM,GAAG,GAAG,MAAM;QAChB,IAAI,EAAE,MAAM;QACZ,WAAW,EAAE,IAAc;QAC3B,IAAI;QACJ,QAAQ;KACT,CAAC;IACF,gBAAgB,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;IAC9B,OAAO,GAAG,CAAC,GAAG,CAAC;AACjB,CAAC;AAMD,MAAM,SAAS,CAAC,CAAC,IAAI,CAAC,GAAQ;IAC5B,MAAM;QACJ,IAAI,EAAE,MAAM;QACZ,GAAG;KACJ,CAAC;AACJ,CAAC;AAED,MAAM,CAAC,MAAM,IAAI,GAAG,CAAC,MAAc,EAAS,EAAE;IAC5C,MAAM,IAAI,MAAM,CAAC,MAAM,CAAC,CAAC;AAC3B,CAAC,CAAC;AAUF,MAAM,SAAS,CAAC,CAAC,QAAQ,CACvB,OAAe,EACf,YAAe;IAEf,MAAM,GAAG,GAAG,MAAM;QAChB,IAAI,EAAE,UAAU;KACjB,CAAC;IACF,gBAAgB,CAAC,GAAG,EAAE,UAAU,CAAC,CAAC;IAClC,IAAI,CAAC,CAAC,OAAO,IAAI,GAAG,CAAC,OAAO,CAAC,EAAE;QAC7B,GAAG,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,YAAY,CAAC;KACrC;IACD,OAAO;QACL,IAAI,KAAK;YACP,OAAO,GAAG,CAAC,OAAO,CAAC,OAAO,CAAM,CAAC;QACnC,CAAC;QACD,IAAI,KAAK,CAAC,CAAI;YACZ,GAAG,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;QAC3B,CAAC;KACF,CAAC;AACJ,CAAC;AASD,MAAM,SAAS,CAAC,CAAC,WAAW;IAC1B,MAAM,GAAG,GAAG,MAAM;QAChB,IAAI,EAAE,UAAU;KACjB,CAAC;IACF,gBAAgB,CAAC,GAAG,EAAE,UAAU,CAAC,CAAC;IAClC,OAAO,GAAG,CAAC,QAAQ,CAAC;AACtB,CAAC;AAMD,MAAM,SAAS,CAAC,CAAC,eAAe,CAAC,QAA8B;IAC7D,MAAM;QACJ,IAAI,EAAE,kBAAkB;QACxB,QAAQ;KACT,CAAC;AACJ,CAAC\"}"}
